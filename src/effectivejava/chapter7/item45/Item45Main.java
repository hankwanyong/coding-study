package effectivejava.chapter7.item45;

public class Item45Main {

	/*
	 * Item 45 스트림은 주의해서 사용하라
	 * (자바8에 추가되었다.)
	 * 
	 * 스트림 :  데이터 원소의 유한 혹은 무한 시퀀스
	 * 	- 스트림 변환 가능 : 컬렉션, 배열, 파일, 정규표현식 패턴 매처, 난수 생성기, 다른 스트림 등
	 * 	- 스트림 원소 데이터 타입 : 객체 참조, 기본 타입(int, long, double)
	 * 스트림 파이프라인 : 스트림 원소들로 수행하는 연산 단계를 표현하는 개념
	 * 	- 구성 : 소스 스트림 > 중간 연산(스트림의 변환) > 종단 연산(원소의 출력)
	 *  - 스트림 파이프라인은 지연 평가(lazy evaluation)
	 *  	1. 지연 평가 : 계산의 결과 값이 필요할 때까지 계산을 늦추는 기법 > 연산 횟수 자체를 줄여 보다 좋은 성능을 준다.
	 *  	2. 대상이 크면 클수록 그 효과를 발휘한다.
	 * 
	 * 스트림을 과용하면 프로그램이 읽거나 유지보수하기 어려워진다.
	 * 스트림에서 불가능한것
	 * 		1. 지역변수를 수정
	 * 		2. 중간에 멈출수 없음 > for문의 break, continue 불가능
	 * 
	 * 스트림 사용하기 좋은 경우
	 * 		1. 원소들의 시퀀스를 일관되게 변환
	 * 		2. 원소들의 시퀀스를 필터링
	 * 		3. 원소들의 시퀀스를 하나의 연산을 사용해 결합
	 * 		4. 원소들의 시퀀스를 컬렉션에 모은다
	 * 		5. 원소들의 시퀀스에서 특정 조건을 만족하는 원소를 찾는다
	 * 
	 * 스트림과 반복 중 어느 쪽이 나은지 확신하기 어렵다면 둘 다 해보고 더 나은쪽을 택하라.
	 * 
	 * 
	 * 
	 * https://futurecreator.github.io/2018/08/26/java-8-streams/
	 */
	
	
	
}
